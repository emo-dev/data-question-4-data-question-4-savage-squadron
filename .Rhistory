zip_codes_df <- readRDS('./r-objects/zip_irs_education_df.rds')
zip_codes_df$income_category <- factor(
zip_codes_df$income_category,
levels = c('Low Income', 'Medium Income', 'High Income', 'Very High Income')
)
create_corr_boxplot <- function(df, x, y) {
df %>%
ggplot(
aes(
x = df[[x]],
y = df[[y]]
)
) +
geom_boxplot()
}
col_names <- c('Dropout', 'Graduation', 'ACT_Composite')
create_corr_boxplot(zip_codes_df, 'income_category', 'Dropout')
create_corr_boxplot(zip_codes_df, 'income_category', 'Graduation')
create_corr_boxplot(zip_codes_df, 'income_category', 'ACT_Composite')
library("dplyr")
library("ggplot2")
zip_codes_df <- readRDS('./r-objects/zip_irs_education_df.rds')
zip_codes_df$income_category <- factor(
zip_codes_df$income_category,
levels = c('Low Income', 'Medium Income', 'High Income', 'Very High Income')
)
create_corr_boxplot <- function(df, x, y) {
df %>%
ggplot(
aes(
x = df[[x]],
y = df[[y]],
xlab(x),
ylab(y)
)
) +
geom_boxplot()
}
col_names <- c('Dropout', 'Graduation', 'ACT_Composite')
create_corr_boxplot(zip_codes_df, 'income_category', 'Dropout')
create_corr_boxplot(zip_codes_df, 'income_category', 'Graduation')
create_corr_boxplot(zip_codes_df, 'income_category', 'ACT_Composite')
library("dplyr")
library("ggplot2")
zip_codes_df <- readRDS('./r-objects/zip_irs_education_df.rds')
zip_codes_df$income_category <- factor(
zip_codes_df$income_category,
levels = c('Low Income', 'Medium Income', 'High Income', 'Very High Income')
)
create_corr_boxplot <- function(df, x, y) {
df %>%
ggplot(
aes(
x = df[[x]],
y = df[[y]],
xlab(x),
ylab(y)
)
) +
geom_boxplot() +
labs(x = x, y = y)
}
col_names <- c('Dropout', 'Graduation', 'ACT_Composite')
create_corr_boxplot(zip_codes_df, 'income_category', 'Dropout')
create_corr_boxplot(zip_codes_df, 'income_category', 'Graduation')
create_corr_boxplot(zip_codes_df, 'income_category', 'ACT_Composite')
library("dplyr")
library("ggplot2")
zip_codes_df <- readRDS('./r-objects/zip_irs_education_df.rds')
zip_codes_df$income_category <- factor(
zip_codes_df$income_category,
levels = c('Low Income', 'Medium Income', 'High Income', 'Very High Income')
)
create_corr_boxplot <- function(df, x, y) {
df %>%
ggplot(
aes(
x = df[[x]],
y = df[[y]]
)
) +
geom_boxplot() +
labs(x = x, y = y)
}
col_names <- c('Dropout', 'Graduation', 'ACT_Composite')
create_corr_boxplot(zip_codes_df, 'income_category', 'Dropout')
create_corr_boxplot(zip_codes_df, 'income_category', 'Graduation')
create_corr_boxplot(zip_codes_df, 'income_category', 'ACT_Composite')
colnames(zip_codes_df)
create_corr_boxplot(zip_codes_df, 'income_category', 'Dropout')
create_corr_boxplot(zip_codes_df, 'income_category', 'Graduation')
create_corr_boxplot(zip_codes_df, 'income_category', 'ACT_Composite')
create_corr_boxplot(zip_codes_df, 'income_category', 'Pct_Chronically_Absent')
create_corr_boxplot(zip_codes_df, 'income_category', 'Pct_Expelled')
create_corr_boxplot(zip_codes_df, 'income_category', 'mean_math')
create_corr_boxplot(zip_codes_df, 'income_category', 'mean_science')
create_corr_boxplot(zip_codes_df, 'income_category', 'mean_literature')
something <- 1:5
for (i in seq_along(something)) { print(i) }
something <- c('1', '2', '3')
for (i in seq_along(something)) { print(i) }
something <- c('1', '2', '3')
for (i in seq_along(something)) { print(something[i]) }
col_names <- c('Dropout', 'Graduation', 'ACT_Composite', 'Pct_Chronically_Absent', 'Pct_Expelled', 'mean_math', 'mean_science', 'mean_literature')
for (i in seq_along(col_names)) {
create_corr_boxplot(zip_codes_df, 'income_category', col_names[i])
}
col_names <- c('Dropout', 'Graduation', 'ACT_Composite', 'Pct_Chronically_Absent', 'Pct_Expelled', 'mean_math', 'mean_science', 'mean_literature')
for (i in seq_along(col_names)) {
create_corr_boxplot(zip_codes_df, 'income_category', col_names[i])
}
col_names <- c('Dropout', 'Graduation', 'ACT_Composite', 'Pct_Chronically_Absent', 'Pct_Expelled', 'mean_math', 'mean_science', 'mean_literature')
for (i in seq_along(col_names)) {
print(i)
print(col_names[i])
create_corr_boxplot(zip_codes_df, 'income_category', col_names[i])
}
col_names <- c('Dropout', 'Graduation', 'ACT_Composite', 'Pct_Chronically_Absent', 'Pct_Expelled', 'mean_math', 'mean_science', 'mean_literature')
for (i in seq_along(col_names)) {
print(i)
print(col_names[i])
create_corr_boxplot(
df = zip_codes_df,
x = 'income_category',
y = col_names[i]
)
}
create_corr_boxplot(zip_codes_df, 'income_category', 'mean_literature')
col_names <- c('Dropout', 'Graduation', 'ACT_Composite', 'Pct_Chronically_Absent', 'Pct_Expelled', 'mean_math', 'mean_science', 'mean_literature')
for (i in seq_along(col_names)) {
print(i)
print(col_names[i])
column <- col_names[i]
create_corr_boxplot(
df = zip_codes_df,
x = 'income_category',
y = column
)
}
col_names <- c('Dropout', 'Graduation', 'ACT_Composite', 'Pct_Chronically_Absent', 'Pct_Expelled', 'mean_math', 'mean_science', 'mean_literature')
for (i in seq_along(col_names)) {
print(i)
print(col_names[i])
column <- col_names[i]
create_corr_boxplot(
df = zip_codes_df,
x = 'income_category',
y = column
)
}
for (i in seq_along(col_names)) {
print(i)
print(col_names[i])
column <- col_names[[i]]
create_corr_boxplot(
df = zip_codes_df,
x = 'income_category',
y = column
)
}
for (i in seq_along(col_names)) {
print(i)
print(col_names[i])
column <- col_names[[i]]
create_corr_boxplot(
df = zip_codes_df,
x = 'income_category',
y = column
)
}
for (i in seq_along(col_names)) {
print(i)
print(col_names[i])
column <- col_names[[i]]
create_corr_boxplot(
df = zip_codes_df,
x = 'income_category',
y = column
)
}
for (i in seq_along(col_names)) {
print(i)
print(col_names[i])
column <- col_names[[i]]
create_corr_boxplot(
df = zip_codes_df,
x = 'income_category',
y = column
)
}
for (i in seq_along(col_names)) {
print(i)
print(col_names[i])
column <- col_names[[i]]
create_corr_boxplot(
df = zip_codes_df,
x = 'income_category',
y = column
)
}
for (i in seq_along(col_names)) {
print(i)
print(col_names[i])
column <- col_names[[i]]
create_corr_boxplot(
df = zip_codes_df,
x = 'income_category',
y = column
)
}
for (i in seq_along(col_names)) {
print(i)
print(col_names[i])
column <- col_names[[i]]
create_corr_boxplot(
df = zip_codes_df,
x = 'income_category',
y = column
)
}
for (i in seq_along(col_names)) {
print(i)
print(col_names[i])
column <- col_names[[i]]
create_corr_boxplot(
df = zip_codes_df,
x = 'income_category',
y = column
)
}
for (i in seq_along(col_names)) {
print(i)
print(col_names[i])
column <- col_names[[i]]
create_corr_boxplot(
df = zip_codes_df,
x = 'income_category',
y = column
)
}
for (i in seq_along(col_names)) {
print(i)
print(col_names[i])
column <- col_names[[i]]
zip_codes_df %>%
ggplot(
aes( x = income_category, y = df[[column]] )
) +
geom_boxplot() +
labs(x = 'income_category', y = column)
}
colnames(zip_codes_df)
col_names <- c('Dropout', 'Graduation', 'ACT_Composite', 'Pct_Chronically_Absent', 'Pct_Expelled', 'mean_math', 'mean_science', 'mean_literature')
for (i in seq_along(col_names)) {
my_plot <- create_corr_boxplot(
df = zip_codes_df,
x = 'income_category',
y = col_names[i]
)
}
create_corr_boxplot <- function(df, x, y) {
my_plot <- df %>%
ggplot(
aes( x = df[[x]], y = df[[y]] )
) +
geom_boxplot() +
labs(x = x, y = y)
}
col_names <- c('Dropout', 'Graduation', 'ACT_Composite', 'Pct_Chronically_Absent', 'Pct_Expelled', 'mean_math', 'mean_science', 'mean_literature')
for (i in seq_along(col_names)) {
my_plot <- create_corr_boxplot(
df = zip_codes_df,
x = 'income_category',
y = col_names[i]
)
}
col_names <- c('Dropout', 'Graduation', 'ACT_Composite', 'Pct_Chronically_Absent', 'Pct_Expelled', 'mean_math', 'mean_science', 'mean_literature')
for (i in seq_along(col_names)) {
create_corr_boxplot(
df = zip_codes_df,
x = 'income_category',
y = col_names[i]
)
}
create_corr_boxplot(zip_codes_df, 'income_category', 'Dropout')
create_corr_boxplot <- function(df, x, y) {
df %>%
ggplot(
aes( x = df[[x]], y = df[[y]] )
) +
geom_boxplot() +
labs(x = x, y = y)
}
create_corr_boxplot(zip_codes_df, 'income_category', 'Dropout')
col_names <- c('Dropout', 'Graduation')
lapply(col_names, function(name) { create_corr_boxplot(zip_codes_df, 'income_category', name)})
col_names <- c('Dropout', 'Graduation')
lapply(col_names, ~ create_corr_boxplot(zip_codes_df, 'income_category', .))
col_names <- c('Dropout', 'Graduation')
lapply(col_names, create_corr_boxplot(zip_codes_df, 'income_category', .))
?lapply
col_names <- c('Dropout', 'Graduation')
lapply(col_names, create_corr_boxplot, c(df = zip_codes_df, x = 'income_category', y = .))
col_names <- c('Dropout', 'Graduation', 'ACT_Composite', 'Pct_Chronically_Absent', 'Pct_Expelled', 'mean_math', 'mean_science', 'mean_literature')
lapply(col_names, function(name) { create_corr_boxplot(zip_codes_df, 'income_category', name)})
library("dplyr")
library("ggplot2")
zip_codes_df <- readRDS('./r-objects/zip_irs_education_df.rds')
zip_codes_df$income_category <- factor(
zip_codes_df$income_category,
levels = c('Low Income', 'Medium Income', 'High Income', 'Very High Income')
)
create_corr_boxplot <- function(df, x, y) {
df %>%
ggplot(
aes( x = df[[x]], y = df[[y]] )
) +
geom_boxplot() +
labs(x = x, y = y)
}
lapply(
c('Dropout', 'Graduation', 'ACT_Composite', 'Pct_Chronically_Absent', 'Pct_Expelled', 'mean_math', 'mean_science', 'mean_literature'),
function(name) { create_corr_boxplot(zip_codes_df, 'income_category', name)}
)
install.packages("PerformanceAnalytics")
colnames(zip_codes_df)
cor_df <- zip_codes_df[ , c(2:7,9:11,15,22)]
chart.Correlation(cor_df, histogram = T, pch = 19)
library("PerformanceAnalytics")
cor_df <- zip_codes_df[ , c(2:7,9:11,15,22)]
chart.Correlation(cor_df, histogram = T, pch = 19)
cor_df <- zip_codes_df[ , c(2:7,9:11,15)]
chart.Correlation(cor_df, histogram = T, pch = 19)
irs_2015_dataset <- read_excel('./data/irs/2015-irs.xls', skip = 5)
View(irs_2015_dataset)
# Read in the data, only keeping the columns defined above, and renaming the columns
irs_2015_dataset <- read_excel('./data/irs/2015-irs.xls', skip = 4) %>%
View()
# Read in the data, only keeping the columns defined above, and renaming the columns
irs_2015_dataset <- read_excel('./data/irs/2015-irs.xls', skip = 5) %>%
View()
#!/usr/bin/env Rscript
library("readxl")
library("dplyr")
library("tidyr")
# Pre-determining the column and col indexes that we want to keep.
column_names <- c('zip', 'gross_income', 'num_dependents', 'adj_gross_income', 'total_income_returns', 'total_income_amount',
'agi_salaries_wages_returns', 'agi_salaries_wages_amount', 'farm_returns', 'unemployment_compensation_returns', 'unemployment_compensation_amount',
'state_local_income_tax_returns', 'state_local_income_tax_amount', 'state_local_general_sales_returns', 'state_local_general_sales_amount',
'real_estate_returns', 'real_estate_amount', 'taxes_paid_returns', 'taxes_paid_amount', 'taxable_income_returns', 'taxable_income_amount',
'child_tax_credit_returns', 'child_tax_credit_amount', 'total_tax_payments_returns', 'total_tax_payments_amount',
'tax_due_at_filing_returns', 'tax_due_at_filing_amount', 'overpayments_refunded_returns', 'overpayments_refunded_amount')
columns_to_keep <- c(1, 2, 9, 13:17, 34:36, 60:67, 72, 73, 90, 91, 102, 103, 122:125)
# Read in the data, only keeping the columns defined above, and renaming the columns
irs_2014_dataset <- read_excel('./data/irs/2014-irs.xls', skip = 5)[columns_to_keep]
names(irs_2014_dataset) <- column_names
# We are only interested in the rows where a zip code is available
irs_2014_dataset <- irs_2014_dataset %>%
drop_na(zip)
# We know that there is an `na` value in every gross_income subset within the irs dataset
# representing Total
irs_2014_dataset['gross_income'][is.na(irs_2014_dataset['gross_income'])] <- 'Total'
saveRDS(irs_2014_dataset, './r-objects/irs_2014_dataset.rds')
write.csv(irs_2014_dataset, './r-objects/irs_2014_dataset.csv')
irs_2014_dataset_group_by_zip_total_gross_income <- irs_2014_dataset %>%
filter(gross_income == 'Total') %>%
select(-gross_income)
# 'zip', 'gross_income', 'num_dependents', 'adj_gross_income', 'total_income_returns', 'total_income_amount' 'taxes_paid_returns' 'taxes_paid_amount'
irs_2014_dataset_initial_ds <- irs_2014_dataset_group_by_zip_total_gross_income[c(1:5, 17, 18)]
saveRDS(irs_2014_dataset_initial_ds, './r-objects/irs_2014_dataset_initial_ds.rds')
write.csv(irs_2014_dataset_initial_ds, './r-objects/irs_2014_dataset_initial_ds.csv')
colnames(irs_2014_dataset_initial_ds)
#!/usr/bin/env Rscript
library("readxl")
library("dplyr")
library("tidyr")
# Read in the data, only keeping the columns defined above, and renaming the columns
col_names <- c('zip', 'gross_income', 'total_income_returns', 'total_income_amount')
irs_2015_dataset <- read_excel('./data/irs/2015-irs.xls', skip = 5)[, c(1, 2, 64, 65)]
names(irs_2015_dataset) <- column_names
# We are only interested in the rows where a zip code is available
irs_2015_dataset <- irs_2015_dataset %>%
drop_na(zip)
# We know that there is an `na` value in every gross_income subset within the irs dataset
# representing Total
irs_2015_dataset['gross_income'][is.na(irs_2015_dataset['gross_income'])] <- 'Total'
View(irs_2015_dataset)
#!/usr/bin/env Rscript
library("readxl")
library("dplyr")
library("tidyr")
# Read in the data, only keeping the columns defined above, and renaming the columns
col_names <- c('zip', 'gross_income', 'total_income_returns', 'total_income_amount')
irs_2015_dataset <- read_excel('./data/irs/2015-irs.xls', skip = 5)[, c(1, 2, 64, 65)]
names(irs_2015_dataset) <- col_names
# We are only interested in the rows where a zip code is available
irs_2015_dataset <- irs_2015_dataset %>%
drop_na(zip)
# We know that there is an `na` value in every gross_income subset within the irs dataset
# representing Total
irs_2015_dataset['gross_income'][is.na(irs_2015_dataset['gross_income'])] <- 'Total'
View(irs_2015_dataset)
irs_2015_dataset <- read_excel('./data/irs/2015-irs.xls', skip = 5)[, c(1, 2, 64, 65)]
irs_2015_dataset <- warnings(read_excel('./data/irs/2015-irs.xls', skip = 5)[, c(1, 2, 64, 65)])
View(irs_2015_dataset)
irs_2015_dataset <- read_excel('./data/irs/2015-irs.xls', skip = 5)[c(1, 2, 64, 65)]
names(irs_2015_dataset) <- col_names
# We are only interested in the rows where a zip code is available
irs_2015_dataset <- irs_2015_dataset %>%
drop_na(zip)
# We know that there is an `na` value in every gross_income subset within the irs dataset
# representing Total
irs_2015_dataset['gross_income'][is.na(irs_2015_dataset['gross_income'])] <- 'Total'
View(irs_2015_dataset)
#!/usr/bin/env Rscript
library("readxl")
library("dplyr")
library("tidyr")
# Read in the data, only keeping the columns defined above, and renaming the columns
col_names <- c('zip', 'gross_income', 'total_income_returns', 'total_income_amount')
irs_2015_dataset <- read_excel('./data/irs/2015-irs.xls', skip = 5)[c(1, 2, 64, 65)]
names(irs_2015_dataset) <- col_names
# We are only interested in the rows where a zip code is available
irs_2015_dataset <- irs_2015_dataset %>%
drop_na(zip)
# We know that there is an `na` value in every gross_income subset within the irs dataset
# representing Total
irs_2015_dataset['gross_income'][is.na(irs_2015_dataset['gross_income'])] <- 'Total'
View(irs_2015_dataset %>% filter(gross_income == 'Total'))
#!/usr/bin/env Rscript
library("readxl")
library("dplyr")
library("tidyr")
# Read in the data, only keeping the columns defined above, and renaming the columns
col_names <- c('zip', 'gross_income', 'total_income_returns', 'total_income_amount')
irs_2011_dataset <- read_excel('./data/irs/2011-irs.xls', skip = 5)
names(irs_2011_dataset) <- col_names
# We are only interested in the rows where a zip code is available
irs_2011_dataset <- irs_2011_dataset %>%
drop_na(zip)
# We know that there is an `na` value in every gross_income subset within the irs dataset
# representing Total
irs_2011_dataset['gross_income'][is.na(irs_2011_dataset['gross_income'])] <- 'Total'
View(irs_2011_dataset %>% filter(gross_income == 'Total'))
#!/usr/bin/env Rscript
library("readxl")
library("dplyr")
library("tidyr")
# Read in the data, only keeping the columns defined above, and renaming the columns
col_names <- c('zip', 'gross_income', 'total_income_returns', 'total_income_amount')
irs_2011_dataset <- read_excel('./data/irs/2011-irs.xls', skip = 5)
names(irs_2011_dataset) <- col_names
# We are only interested in the rows where a zip code is available
irs_2011_dataset <- irs_2011_dataset %>%
drop_na(zip)
View(irs_2011_dataset)
#!/usr/bin/env Rscript
library("readxl")
library("dplyr")
library("tidyr")
# Read in the data, only keeping the columns defined above, and renaming the columns
col_names <- c('zip', 'gross_income', 'total_income_returns', 'total_income_amount')
irs_2011_dataset <- read_excel('./data/irs/2011-irs.xls', skip = 5)
names(irs_2011_dataset) <- col_names
# We are only interested in the rows where a zip code is available
irs_2011_dataset <- irs_2011_dataset %>%
drop_na(zip)
# We know that there is an `na` value in every gross_income subset within the irs dataset
# representing Total
irs_2011_dataset['gross_income'][is.na(irs_2011_dataset['gross_income'])] <- 'Total'
View(irs_2011_dataset %>% filter(gross_income == 'Total'))
irs_2011_dataset <- read_excel('./data/irs/2011-irs.xls', skip = 5)
names(irs_2011_dataset) <- col_names
View(irs_2011_dataset)
#!/usr/bin/env Rscript
library("readxl")
library("dplyr")
library("tidyr")
# Read in the data, only keeping the columns defined above, and renaming the columns
col_names <- c('zip', 'gross_income', 'total_income_returns', 'total_income_amount')
irs_2011_dataset <- read_excel('./data/irs/2011-irs-numbers.xls', skip = 5)
names(irs_2011_dataset) <- col_names
View(irs_2011_dataset)
# We are only interested in the rows where a zip code is available
irs_2011_dataset <- irs_2011_dataset %>%
drop_na(zip)
# We know that there is an `na` value in every gross_income subset within the irs dataset
# representing Total
irs_2011_dataset['gross_income'][is.na(irs_2011_dataset['gross_income'])] <- 'Total'
View(irs_2011_dataset %>% filter(gross_income == 'Total'))
#!/usr/bin/env Rscript
library("ggplot2")
library("stringr")
library("reshape2")
library("car")
library("dplyr")
education_df_plus_3 <- readRDS('./r-objects/education_df_plus_3.rds')
# Subset the education data to only contain the act composite, math, science, and lit cols
edu_subjects_act <- education_df_plus_3[, c("ACT_Composite", "mean_math", "mean_science", "mean_literature")]
# Melt the df to be indexed by Act compositea
md_education <- melt(edu_subjects_act, id="ACT_Composite")
scatterplot(
ACT_Composite ~ value | variable,
legend.title = "ACT / Math, Science, Lit",
xlab = "Avg Subject Scores",
ylab = "ACT Scores",
data = md_education,
smoother = FALSE,
grid = FALSE,
frame = FALSE
)
View(md_education)
