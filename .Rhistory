col_corr <- cor(df[[col]], df[[col_name]])
if (col_corr > thresh) {
cpairs(
df[, c(col_name, col)],
gap=.5,
upper.panel=panel.smooth,
main = paste(col, "/", col_name, "/ Corr: ", col_corr)
)
}
}
}
for (demo in c("Pct_Black", "Pct_Hispanic", "Pct_Native_American")) {
find_cor(df = education_tax_income, col_name = demo, thresh = 0.3)
}
#!/usr/bin/env Rscript
library("ggplot2")
library("stringr")
library("gclus")
zip_irs_education <- readRDS('./r-objects/zip_irs_education.rds')
find_cor <- function(df, col_name, thresh=0.2) {
# This function was created to iterate through the columns of a df,
# and find the corr between a specific col and every other column
# that reaches a certain threshold.
df <- Filter(is.numeric, df)
for (i in seq_along(colnames(df))) {
col <- colnames(df)[i]
if (col == col_name) next
col_corr <- cor(df[[col]], df[[col_name]])
if (col_corr > thresh) {
cpairs(
df[, c(col_name, col)],
gap=.5,
upper.panel=panel.smooth,
main = paste(col, "/", col_name, "/ Corr: ", col_corr)
)
}
}
}
for (demo in colnames(zip_irs_education)) {
find_cor(df = education_tax_income, col_name = demo, thresh = 0.3)
}
#!/usr/bin/env Rscript
library("ggplot2")
library("stringr")
library("gclus")
zip_irs_education <- readRDS('./r-objects/zip_irs_education.rds')
find_cor <- function(df, col_name, thresh=0.2) {
# This function was created to iterate through the columns of a df,
# and find the corr between a specific col and every other column
# that reaches a certain threshold.
df <- Filter(is.numeric, df)
for (i in seq_along(colnames(df))) {
col <- colnames(df)[i]
if (col == col_name) next
col_corr <- cor(df[[col]], df[[col_name]])
if (col_corr > thresh) {
cpairs(
df[, c(col_name, col)],
gap=.5,
upper.panel=panel.smooth,
main = paste(col, "/", col_name, "/ Corr: ", col_corr)
)
}
}
}
for (demo in colnames(zip_irs_education)) {
find_cor(df = education_tax_income, col_name = demo, thresh = 0.3)
}
#!/usr/bin/env Rscript
library("ggplot2")
library("stringr")
library("gclus")
education_irs_zip <- readRDS('./r-objects/zip_irs_education_df.rds')
View(education_irs_zip)
find_cor <- function(df, col_name, thresh=0.2) {
# This function was created to iterate through the columns of a df,
# and find the corr between a specific col and every other column
# that reaches a certain threshold.
df <- Filter(is.numeric, df)
for (i in seq_along(colnames(df))) {
col <- colnames(df)[i]
if (col == col_name) next
col_corr <- cor(df[[col]], df[[col_name]])
if (col_corr > thresh) {
cpairs(
df[, c(col_name, col)],
gap=.5,
upper.panel=panel.smooth,
main = paste(col, "/", col_name, "/ Corr: ", col_corr)
)
}
}
}
for (demo in colnames(education_irs_zip)) {
find_cor(df = education_irs_zip, col_name = demo, thresh = 0.3)
}
df = Filter(is.numeric, education_irs_zip)
for (demo in colnames(df)) {
find_cor(df = df, col_name = demo, thresh = 0.3)
}
View(df)
find_cor <- function(df, col_name, thresh=0.2) {
# This function was created to iterate through the columns of a df,
# and find the corr between a specific col and every other column
# that reaches a certain threshold.
df <- Filter(is.numeric, df)
for (i in seq_along(colnames(df))) {
col <- colnames(df)[i]
if (col == col_name) next
col_corr <- cor(df[[col]], df[[col_name]])
if (col_corr > thresh) {
cpairs(
df[, c(col_name, col)],
gap=.5,
upper.panel=panel.smooth,
main = paste(col, "/", col_name, "/ Corr: ", col_corr)
)
}
}
}
for (demo in colnames(education_irs_zip)) {
find_cor(df = education_irs_zip, col_name = demo, thresh = 0.3)
}
debugSource('~/workspace/nss/datascience/trimester/second/groups/savage-squadron/data-question-4-data-question-4-savage-squadron/scripts/explore/explore-corr-all-variables.R', echo=TRUE)
debugSource('~/workspace/nss/datascience/trimester/second/groups/savage-squadron/data-question-4-data-question-4-savage-squadron/scripts/explore/explore-corr-all-variables.R', echo=TRUE)
debugSource('~/workspace/nss/datascience/trimester/second/groups/savage-squadron/data-question-4-data-question-4-savage-squadron/scripts/explore/explore-corr-all-variables.R', echo=TRUE)
debugSource('~/workspace/nss/datascience/trimester/second/groups/savage-squadron/data-question-4-data-question-4-savage-squadron/scripts/explore/explore-corr-all-variables.R', echo=TRUE)
debugSource('~/workspace/nss/datascience/trimester/second/groups/savage-squadron/data-question-4-data-question-4-savage-squadron/scripts/explore/explore-corr-all-variables.R', echo=TRUE)
df = Filter(is.numeric & !is.na, education_irs_zip)
find_cor <- function(df, col_name, thresh=0.2) {
# This function was created to iterate through the columns of a df,
# and find the corr between a specific col and every other column
# that reaches a certain threshold.
df <- Filter(is.numeric, df)
for (i in seq_along(colnames(df))) {
col <- colnames(df)[i]
if (col == col_name) next
col_corr <- cor(
df[[col]][!(is.na(df[[col]]))],
df[[col_name]][!(is.na(df[[col_name]]))]
)
if (col_corr > thresh) {
cpairs(
df[, c(col_name, col)],
gap=.5,
upper.panel=panel.smooth,
main = paste(col, "/", col_name, "/ Corr: ", col_corr)
)
}
}
}
df = Filter(is.numeric, education_irs_zip)
for (demo in colnames(df)) {
find_cor(df = df, col_name = demo, thresh = 0.3)
}
find_cor <- function(df, col_name, thresh=0.2) {
# This function was created to iterate through the columns of a df,
# and find the corr between a specific col and every other column
# that reaches a certain threshold.
df <- Filter(is.numeric, df)
for (i in seq_along(colnames(df))) {
col <- colnames(df)[i]
if (col == col_name) next
col_corr <- cor(
df[[col]][!(is.na(df[[col]]))],
df[[col_name]][!(is.na(df[[col_name]]))]
)
if (col_corr > thresh) {
cpairs(
df[, c(col_name, col)],
gap=.5,
upper.panel=panel.smooth,
main = paste(col, "/", col_name, "/ Corr: ", col_corr)
)
}
}
}
df = Filter(is.numeric, education_irs_zip)
for (demo in colnames(df)) {
find_cor(df = df, col_name = demo, thresh = 0.3)
}
find_cor <- function(df, col_name, thresh=0.2) {
# This function was created to iterate through the columns of a df,
# and find the corr between a specific col and every other column
# that reaches a certain threshold.
df <- Filter(is.numeric, df)
for (i in seq_along(colnames(df))) {
col <- colnames(df)[i]
if (col == col_name) next
col_corr <- cor(df[[col]], df[[col_name]])
if (col_corr > thresh) {
cpairs(
df[, c(col_name, col)],
gap=.5,
upper.panel=panel.smooth,
main = paste(col, "/", col_name, "/ Corr: ", col_corr)
)
}
}
}
df = complete.cases(Filter(is.numeric, education_irs_zip))
for (demo in colnames(df)) {
find_cor(df = df, col_name = demo, thresh = 0.3)
}
for (demo in colnames(df)) {
find_cor(df = df, col_name = demo, thresh = 0.1)
}
debugSource('~/workspace/nss/datascience/trimester/second/groups/savage-squadron/data-question-4-data-question-4-savage-squadron/scripts/explore/explore-corr-all-variables.R', echo=TRUE)
find_cor <- function(df, col_name, thresh=0.2) {
# This function was created to iterate through the columns of a df,
# and find the corr between a specific col and every other column
# that reaches a certain threshold.
df <- Filter(is.numeric, df)
for (i in seq_along(colnames(df))) {
col <- colnames(df)[i]
if (col == col_name) next
col_corr <- cor(df[[col]], df[[col_name]])
if (col_corr > thresh) {
cpairs(
df[, c(col_name, col)],
gap=.5,
upper.panel=panel.smooth,
main = paste(col, "/", col_name, "/ Corr: ", col_corr)
)
}
}
}
df = Filter(is.numeric, education_irs_zip)
df = df[complete.cases(df), ]
for (demo in colnames(df)) {
find_cor(df = df, col_name = demo, thresh = 0.1)
}
find_cor <- function(df, col_name, thresh=0.2) {
# This function was created to iterate through the columns of a df,
# and find the corr between a specific col and every other column
# that reaches a certain threshold.
df <- Filter(is.numeric, df)
for (i in seq_along(colnames(df))) {
col <- colnames(df)[i]
if (col == col_name) next
col_corr <- cor(df[[col]], df[[col_name]])
if (col_corr > thresh) {
cpairs(
df[, c(col_name, col)],
gap=.5,
upper.panel=panel.smooth,
main = paste(col, "/", col_name, "/ Corr: ", col_corr)
)
}
}
}
df = Filter(is.numeric, education_irs_zip)
df = df[complete.cases(df), ]
for (demo in colnames(df)) {
find_cor(df = df, col_name = demo, thresh = 0.1)
}
#!/usr/bin/env Rscript
library("ggplot2")
library("stringr")
library("gclus")
education_irs_zip <- readRDS('./r-objects/zip_irs_education_df.rds')
find_cor <- function(df, col_name, thresh=0.2) {
# This function was created to iterate through the columns of a df,
# and find the corr between a specific col and every other column
# that reaches a certain threshold.
df <- Filter(is.numeric, df)
for (i in seq_along(colnames(df))) {
col <- colnames(df)[i]
if (col == col_name) next
col_corr <- cor(df[[col]], df[[col_name]])
if (col_corr > thresh) {
cpairs(
df[, c(col_name, col)],
gap=.5,
upper.panel=panel.smooth,
main = paste(col, "/", col_name, "/ Corr: ", col_corr)
)
}
}
}
df = Filter(is.numeric, education_irs_zip)
df = df[complete.cases(df), ]
for (demo in colnames(df)) {
find_cor(df = df, col_name = demo, thresh = 0.3)
}
vsdfgf
fdf
ç∂cdcdfjsmdf;a,
#!/usr/bin/env Rscript
library("ggplot2")
library("stringr")
library("gclus")
education_df_plus_3 <- readRDS('./r-objects/education_df_plus_3.rds')
education_irs_zip <- readRDS('./r-objects/zip_irs_education_df.rds')[, c("county", "income_per_tax_return")]
education_cols <- c(
"county", "Pct_Black", "Pct_Hispanic", "Pct_Native_American",
"Pct_EL", "Pct_SWD", "Pct_ED", "ACT_Composite",
"Pct_Expelled", "Graduation",
"mean_math", "mean_science", "mean_literature"
)
education <- education_df_plus_3[education_cols]
education_tax_income <- merge(education_irs_zip, education, by = 'county')
find_cor <- function(df, col_name, thresh=0.2) {
# This function was created to iterate through the columns of a df,
# and find the corr between a specific col and every other column
# that reaches a certain threshold.
df <- Filter(is.numeric, df)
for (i in seq_along(colnames(df))) {
col <- colnames(df)[i]
if (col == col_name) next
col_corr <- cor(df[[col]], df[[col_name]])
if (col_corr > thresh) {
cpairs(
df[, c(col_name, col)],
gap=.5,
upper.panel=panel.smooth,
main = paste(col, "/", col_name, "/ Corr: ", col_corr)
)
}
}
}
for (demo in c("Pct_Black", "Pct_Hispanic", "Pct_Native_American")) {
find_cor(df = education_tax_income, col_name = demo, thresh = 0.3)
}
#!/usr/bin/env Rscript
library("ggplot2")
library("stringr")
library("gclus")
education_irs_zip <- readRDS('./r-objects/zip_irs_education_df.rds')
find_cor <- function(df, col_name, thresh=0.2) {
# This function was created to iterate through the columns of a df,
# and find the corr between a specific col and every other column
# that reaches a certain threshold.
df <- Filter(is.numeric, df)
for (i in seq_along(colnames(df))) {
col <- colnames(df)[i]
if (col == col_name) next
col_corr <- cor(df[[col]], df[[col_name]])
if (col_corr > thresh) {
cpairs(
df[, c(col_name, col)],
gap=.5,
upper.panel=panel.smooth,
main = paste(col, "/", col_name, "/ Corr: ", col_corr)
)
}
}
}
df = Filter(is.numeric, education_irs_zip)
df = df[complete.cases(df), ]
for (demo in colnames(df)) {
find_cor(df = df, col_name = demo, thresh = 0.3)
}
?boxplot
find_cor <- function(df, col_name, thresh=0.2) {
# This function was created to iterate through the columns of a df,
# and find the corr between a specific col and every other column
# that reaches a certain threshold.
df <- Filter(is.numeric, df)
for (i in seq_along(colnames(df))) {
col <- colnames(df)[i]
if (col == col_name) next
col_corr <- cor(df[[col]], df[[col_name]])
if (col_corr > thresh) {
cpairs(
df[, c(col_name, col)],
gap=.5,
upper.panel=panel.smooth,
main = paste(col, "/", col_name, "/ Corr: ", col_corr)
)
boxplot(
data = df,
x = col_name
)
}
}
}
df = Filter(is.numeric, education_irs_zip)
df = df[complete.cases(df), ]
for (demo in colnames(df)) {
find_cor(df = df, col_name = demo, thresh = 0.3)
}
find_cor <- function(df, col_name, thresh=0.2) {
# This function was created to iterate through the columns of a df,
# and find the corr between a specific col and every other column
# that reaches a certain threshold.
df <- Filter(is.numeric, df)
for (i in seq_along(colnames(df))) {
col <- colnames(df)[i]
if (col == col_name) next
col_corr <- cor(df[[col]], df[[col_name]])
if (col_corr > thresh) {
cpairs(
df[, c(col_name, col)],
gap=.5,
upper.panel=panel.smooth,
main = paste(col, "/", col_name, "/ Corr: ", col_corr)
)
boxplot(df[[col_name]] ~ df[[col]], data=df)
}
}
}
df = Filter(is.numeric, education_irs_zip)
df = df[complete.cases(df), ]
for (demo in colnames(df)) {
find_cor(df = df, col_name = demo, thresh = 0.3)
}
find_cor <- function(df, col_name, thresh=0.2) {
# This function was created to iterate through the columns of a df,
# and find the corr between a specific col and every other column
# that reaches a certain threshold.
df <- Filter(is.numeric, df)
for (i in seq_along(colnames(df))) {
col <- colnames(df)[i]
if (col == col_name) next
col_corr <- cor(df[[col]], df[[col_name]])
if (col_corr > thresh) {
cpairs(
df[, c(col_name, col)],
gap=.5,
upper.panel=panel.smooth,
main = paste(col, "/", col_name, "/ Corr: ", col_corr)
)
}
}
}
df = Filter(is.numeric, education_irs_zip)
df = df[complete.cases(df), ]
for (demo in colnames(df)) {
find_cor(df = df, col_name = demo, thresh = 0.3)
}
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.0, .8), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
find_cor <- function(df, col_name, thresh=0.2) {
# This function was created to iterate through the columns of a df,
# and find the corr between a specific col and every other column
# that reaches a certain threshold.
df <- Filter(is.numeric, df)
for (i in seq_along(colnames(df))) {
col <- colnames(df)[i]
if (col == col_name) next
col_1 <- remove_outliers(df[[col]])
col_2 <- remove_outliers(df[[col_name]])
col_corr <- cor(col_1, col_2)
if (col_corr > thresh) {
cpairs(
df[, c(col_name, col)],
gap=.5,
upper.panel=panel.smooth,
main = paste(col, "/", col_name, "/ Corr: ", col_corr)
)
}
}
}
df = Filter(is.numeric, education_irs_zip)
df = df[complete.cases(df), ]
for (demo in colnames(df)) {
find_cor(df = df, col_name = demo, thresh = 0.3)
}
#!/usr/bin/env Rscript
library("ggplot2")
library("stringr")
library("gclus")
education_irs_zip <- readRDS('./r-objects/zip_irs_education_df.rds')
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.0, .8), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
find_cor <- function(df, col_name, thresh=0.2) {
# This function was created to iterate through the columns of a df,
# and find the corr between a specific col and every other column
# that reaches a certain threshold.
df <- Filter(is.numeric, df)
for (i in seq_along(colnames(df))) {
col <- colnames(df)[i]
if (col == col_name) next
col_1 <- remove_outliers(df[[col]])
col_2 <- remove_outliers(df[[col_name]])
col_corr <- cor(col_1, col_2)
if (col_corr > thresh) {
cpairs(
df[, c(col_name, col)],
gap=.5,
upper.panel=panel.smooth,
main = paste(col, "/", col_name, "/ Corr: ", col_corr)
)
}
}
}
df = Filter(is.numeric, education_irs_zip)
df = df[complete.cases(df), ]
for (demo in colnames(df)) {
find_cor(df = df, col_name = demo, thresh = 0.3)
}
