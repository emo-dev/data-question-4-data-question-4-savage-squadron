ACT_Composite ~ value | variable,
legend.title = "ACT / Math, Science, Lit ~ Excluding 0 as Avg",
labels = md_education,
xlab = "Avg Subject Scores",
ylab = "ACT Scores",
data = md_education %>% filter(value != 0),
smoother = FALSE,
grid = FALSE,
frame = FALSE
)
# Subset the education data to only contain the act composite, math, science, and lit cols
edu_act_dropout_vs_graduation <- education_df_plus_3[, c("ACT_Composite", "Dropout", "Graduation")]
# Melt the df to be indexed by Act composite
md_dropout_graduation_act <- melt(edu_act_dropout_vs_graduation, id="ACT_Composite")
# These plots were made to help visualize the relationship between act
# scores and either dropout or graduation rate
scatterplot(
ACT_Composite ~ value,
legend.title = "ACT / Dropout Pct",
xlab = paste("Dropout Pct", cor(
md_dropout_graduation_act$ACT_Composite,
md_dropout_graduation_act$value
)),
ylab = "ACT Scores",
data = md_dropout_graduation_act %>% filter(variable == "Dropout"),
smoother = FALSE,
grid = FALSE,
frame = FALSE
)
scatterplot(
ACT_Composite ~ value,
legend.title = "ACT / Graduation Pct",
xlab = paste("Graduation Pct", cor(
md_dropout_graduation_act$ACT_Composite,
md_dropout_graduation_act$value
)),
ylab = "ACT Scores",
data = md_dropout_graduation_act %>% filter(variable == "Graduation"),
smoother = "loessLine",
grid = FALSE,
frame = FALSE
)
# Subset the education data to only contain the act composite, math, science, and lit cols
edu_act_vs_core_region <- education_df_plus_3[, c("ACT_Composite", "CORE_region")]
# Melt the df to be indexed by Act composite
md_act_core <- melt(edu_act_vs_core_region, id="ACT_Composite")
par(cex.axis=.5)
boxplot(
ACT_Composite ~ value,
data=md_act_core,
main="ACT Scores For CORE Regions",
ylab="ACT Scores",
las = 2
)
library("geojsonio")
library("stringr")
library("leaflet")
zip_codes_df <- readRDS('./r-objects/zip_code_total_population.rds')
tn_counties_geojson <- geojsonio::geojson_read(
"http://catalog.civicdashboards.com/dataset/6982aae7-954b-4b7e-8f18-ab56b3fe625d/resource/60b241a8-07dc-478c-bb10-a55802e1cb36/download/4811a0678aed4619ac7857e831df9ccctemp.geojson",
what = "sp"
)
names(tn_counties_geojson)[names(tn_counties_geojson) == "name"] <- "county"
tn_counties_geojson@data$county <- word(tolower(tn_counties_geojson@data$county), 1)
tn_counties_geojson@data <- data.frame(
tn_counties_geojson@data,
zip_codes_df[match(tn_counties_geojson@data[, 'county'], zip_codes_df[, 'county']), ]
)
pal <- colorNumeric("viridis", NULL)
leaflet(tn_counties_geojson) %>%
addTiles() %>%
addPolygons(
stroke = FALSE,
smoothFactor = 0.3,
fillOpacity = 1,
fillColor = ~pal(log10(total_population)),
label = ~paste0(county, ": ", formatC(total_population, big.mark = ","))
) %>%
addLegend(
pal = pal,
values = ~log10(total_population),
opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x))
)
# Save off the summarized total pop per county / geojson
saveRDS(tn_counties_geojson, './r-objects/tn_counties_pop_geojson.rds')
write.csv(tn_counties_geojson, './r-objects/tn_counties_pop_geojson.csv')
library("geojsonio")
library("stringr")
library("leaflet")
zip_codes_df <- readRDS('./r-objects/zip_code_total_population.rds')
tn_counties_geojson <- geojsonio::geojson_read(
"http://catalog.civicdashboards.com/dataset/6982aae7-954b-4b7e-8f18-ab56b3fe625d/resource/60b241a8-07dc-478c-bb10-a55802e1cb36/download/4811a0678aed4619ac7857e831df9ccctemp.geojson",
what = "sp"
)
names(tn_counties_geojson)[names(tn_counties_geojson) == "name"] <- "county"
tn_counties_geojson@data$county <- word(tolower(tn_counties_geojson@data$county), 1)
tn_counties_geojson@data <- data.frame(
tn_counties_geojson@data,
zip_codes_df[match(tn_counties_geojson@data[, 'county'], zip_codes_df[, 'county']), ]
)
pal <- colorNumeric("viridis", NULL)
leaflet(tn_counties_geojson) %>%
addTiles() %>%
addPolygons(
stroke = FALSE,
smoothFactor = 0.3,
fillOpacity = 1,
fillColor = ~pal(log10(total_population)),
label = ~paste0(county, ": ", formatC(total_population, big.mark = ","))
) %>%
addLegend(
pal = pal,
values = ~log10(total_population),
opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x))
)
# Save off the summarized total pop per county / geojson
saveRDS(tn_counties_geojson, './r-objects/tn_counties_pop_geojson.rds')
write.csv(tn_counties_geojson, './r-objects/tn_counties_pop_geojson.csv')
library("geojsonio")
library("stringr")
library("leaflet")
zip_codes_df <- readRDS('./r-objects/zip_code_total_population.rds')
tn_counties_geojson <- geojsonio::geojson_read(
"http://catalog.civicdashboards.com/dataset/6982aae7-954b-4b7e-8f18-ab56b3fe625d/resource/60b241a8-07dc-478c-bb10-a55802e1cb36/download/4811a0678aed4619ac7857e831df9ccctemp.geojson",
what = "sp"
)
names(tn_counties_geojson)[names(tn_counties_geojson) == "name"] <- "county"
tn_counties_geojson@data$county <- word(tolower(tn_counties_geojson@data$county), 1)
tn_counties_geojson@data <- data.frame(
tn_counties_geojson@data,
zip_codes_df[match(tn_counties_geojson@data[, 'county'], zip_codes_df[, 'county']), ]
)
pal <- colorNumeric("viridis", NULL)
leaflet(tn_counties_geojson) %>%
addTiles() %>%
addPolygons(
stroke = FALSE,
smoothFactor = 0.3,
fillOpacity = 1,
fillColor = ~pal(log10(total_population)),
label = ~paste0(county, ": ", formatC(total_population, big.mark = ","))
) %>%
addLegend(
pal = pal,
values = ~log10(total_population),
opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x))
)
# Save off the summarized total pop per county / geojson
saveRDS(tn_counties_geojson, './r-objects/tn_counties_pop_geojson.rds')
write.csv(tn_counties_geojson, './r-objects/tn_counties_pop_geojson.csv')
#!/usr/bin/env Rscript
library("ggplot2")
library("stringr")
library("gclus")
education_df_plus_3 <- readRDS('./r-objects/education_df_plus_3.rds')
education_cols <- c(
"county", "Pct_Black", "Pct_Hispanic", "Pct_Native_American",
"Pct_EL", "Pct_SWD", "Pct_ED", "ACT_Composite",
"Pct_Expelled", "Graduation",
"mean_math", "mean_science", "mean_literature"
)
education <- education_df_plus_3[education_cols]
for (demo in c("Pct_Black", "Pct_Hispanic", "Pct_Native_American")) {
name <- regmatches(demo, regexpr("_", demo), invert = TRUE)[[1]][2]
cpairs(
education[, c(demo, 'mean_math', 'mean_science', 'mean_literature')],
pch=".", gap=.5,
upper.panel=panel.smooth,
main = paste(name, "/ General Math, Science, and Lit")
)
cpairs(
education[, c(demo, "Pct_Expelled", "Graduation")],
pch=".", gap=.5,
upper.panel=panel.smooth,
main = paste(name, "/ Expelled vs. Graduation")
)
cpairs(
education[, c(demo, "ACT_Composite")],
pch=".", gap=.5,
upper.panel=panel.smooth,
main = paste(name, "/ ACT Scores")
)
}
#!/usr/bin/env Rscript
library("ggplot2")
library("stringr")
library("gclus")
education_df_plus_3 <- readRDS('./r-objects/education_df_plus_3.rds')
education_cols <- c(
"county", "Pct_Black", "Pct_Hispanic", "Pct_Native_American",
"Pct_EL", "Pct_SWD", "Pct_ED", "ACT_Composite",
"Pct_Expelled", "Graduation",
"mean_math", "mean_science", "mean_literature"
)
education <- education_df_plus_3[education_cols]
for (demo in c("Pct_Black", "Pct_Hispanic", "Pct_Native_American")) {
name <- regmatches(demo, regexpr("_", demo), invert = TRUE)[[1]][2]
cpairs(
education[, c('mean_math', 'mean_science', 'mean_literature', demo)],
pch=".", gap=.5,
upper.panel=panel.smooth,
main = paste(name, "/ General Math, Science, and Lit")
)
cpairs(
education[, c("Pct_Expelled", "Graduation", demo)],
pch=".", gap=.5,
upper.panel=panel.smooth,
main = paste(name, "/ Expelled vs. Graduation")
)
cpairs(
education[, c("ACT_Composite", demo)],
pch=".", gap=.5,
upper.panel=panel.smooth,
main = paste(name, "/ ACT Scores")
)
}
education_irs_zip <- readRDS('./r-objects/education_merge_irs_zip_subset.rds')
View(education_irs_zip)
education_irs_zip <- readRDS('./r-objects/zip_irs_education_df.rds')
View(education_irs_zip)
education_tax_income <- merge(education_irs_zip, education, by = 'county')
View(education_tax_income)
colnames(education_tax_income)
education_irs_zip <- readRDS('./r-objects/zip_irs_education_df.rds')[["income_per_tax_return"]]
View(education_irs_zip)
education_irs_zip <- readRDS('./r-objects/zip_irs_education_df.rds')[, c("county", "income_per_tax_return")]
education_irs_zip
View(education_irs_zip)
#!/usr/bin/env Rscript
library("ggplot2")
library("stringr")
library("gclus")
education_df_plus_3 <- readRDS('./r-objects/education_df_plus_3.rds')
education_irs_zip <- readRDS('./r-objects/zip_irs_education_df.rds')[, c("county", "income_per_tax_return")]
education_cols <- c(
"county", "Pct_Black", "Pct_Hispanic", "Pct_Native_American",
"Pct_EL", "Pct_SWD", "Pct_ED", "ACT_Composite",
"Pct_Expelled", "Graduation",
"mean_math", "mean_science", "mean_literature"
)
education <- education_df_plus_3[education_cols]
education_tax_income <- merge(education_irs_zip, education, by = 'county')
View(education_tax_income)
#!/usr/bin/env Rscript
library("ggplot2")
library("stringr")
library("gclus")
education_df_plus_3 <- readRDS('./r-objects/education_df_plus_3.rds')
education_irs_zip <- readRDS('./r-objects/zip_irs_education_df.rds')[, c("county", "income_per_tax_return")]
education_cols <- c(
"county", "Pct_Black", "Pct_Hispanic", "Pct_Native_American",
"Pct_EL", "Pct_SWD", "Pct_ED", "ACT_Composite",
"Pct_Expelled", "Graduation",
"mean_math", "mean_science", "mean_literature"
)
education <- education_df_plus_3[education_cols]
education_tax_income <- merge(education_irs_zip, education, by = 'county')
for (demo in c("Pct_Black", "Pct_Hispanic", "Pct_Native_American")) {
name <- regmatches(demo, regexpr("_", demo), invert = TRUE)[[1]][2]
cpairs(
education[, c('mean_math', 'mean_science', 'mean_literature', demo)],
pch=".", gap=.5,
upper.panel=panel.smooth,
main = paste(name, "/ General Math, Science, and Lit")
)
cpairs(
education[, c("Pct_Expelled", "Graduation", demo)],
pch=".", gap=.5,
upper.panel=panel.smooth,
main = paste(name, "/ Expelled vs. Graduation")
)
cpairs(
education[, c("income_per_tax_return", "ACT_Composite", demo)],
pch=".", gap=.5,
upper.panel=panel.smooth,
main = paste(name, "/ ACT Scores")
)
}
#!/usr/bin/env Rscript
library("ggplot2")
library("stringr")
library("gclus")
education_df_plus_3 <- readRDS('./r-objects/education_df_plus_3.rds')
education_irs_zip <- readRDS('./r-objects/zip_irs_education_df.rds')[, c("county", "income_per_tax_return")]
education_cols <- c(
"county", "Pct_Black", "Pct_Hispanic", "Pct_Native_American",
"Pct_EL", "Pct_SWD", "Pct_ED", "ACT_Composite",
"Pct_Expelled", "Graduation",
"mean_math", "mean_science", "mean_literature"
)
education <- education_df_plus_3[education_cols]
education_tax_income <- merge(education_irs_zip, education, by = 'county')
for (demo in c("Pct_Black", "Pct_Hispanic", "Pct_Native_American")) {
name <- regmatches(demo, regexpr("_", demo), invert = TRUE)[[1]][2]
cpairs(
education_tax_income[, c('mean_math', 'mean_science', 'mean_literature', demo)],
pch=".", gap=.5,
upper.panel=panel.smooth,
main = paste(name, "/ General Math, Science, and Lit")
)
cpairs(
education_tax_income[, c("Pct_Expelled", "Graduation", demo)],
pch=".", gap=.5,
upper.panel=panel.smooth,
main = paste(name, "/ Expelled vs. Graduation")
)
cpairs(
education_tax_income[, c("income_per_tax_return", "ACT_Composite", demo)],
pch=".", gap=.5,
upper.panel=panel.smooth,
main = paste(name, "/ ACT Scores")
)
}
colnames(education_tax_income)
#!/usr/bin/env Rscript
library("ggplot2")
library("stringr")
library("gclus")
education_df_plus_3 <- readRDS('./r-objects/education_df_plus_3.rds')
education_irs_zip <- readRDS('./r-objects/zip_irs_education_df.rds')[, c("county", "income_per_tax_return")]
education_cols <- c(
"county", "Pct_Black", "Pct_Hispanic", "Pct_Native_American",
"Pct_EL", "Pct_SWD", "Pct_ED", "ACT_Composite",
"Pct_Expelled", "Graduation",
"mean_math", "mean_science", "mean_literature"
)
education <- education_df_plus_3[education_cols]
education_tax_income <- merge(education_irs_zip, education, by = 'county')
for (demo in c("Pct_Black", "Pct_Hispanic", "Pct_Native_American")) {
name <- regmatches(demo, regexpr("_", demo), invert = TRUE)[[1]][2]
cpairs(
education_tax_income[, c('mean_math', 'mean_science', 'mean_literature', demo)],
pch=".", gap=.5,
upper.panel=panel.smooth,
main = paste(name, "/ General Math, Science, and Lit")
)
cpairs(
education_tax_income[, c("Pct_Expelled", "Graduation", demo)],
pch=".", gap=.5,
upper.panel=panel.smooth,
main = paste(name, "/ Expelled vs. Graduation")
)
cpairs(
education_tax_income[, c("income_per_tax_return", "ACT_Composite", demo)],
pch=".", gap=.5,
upper.panel=panel.smooth,
main = paste(name, "/ ACT Scores")
)
}
cor(education_tax_income$ACT_Composite, education_tax_income$mean_math)
df <- data.frame()
names(df) <- c('x', 'y')
df <- data.frame(c('x', 'y'))
df
View(df)
?data.frame
data.frame('x', 'y')
df <- data.frame(matrix(ncol = 2, nrow = 0))
names <- c('x', 'y')
names(df) <- names
df
View(df)
df %>% filter(x == 'a', y == 'b')
df %>% filter(x == 'a' && y == 'b')
df[[1]] c(1, 2)
df[[1]] <- c(1, 2)
df <- rbind(df, c(1, 2))
df
df <- rbind(df, c(3, 4))
df
df %>% filter(x == 2)
library("dplyr")
df %>% filter(x == 2)
df %>% filter(X1 == 2)
if (df %>% filter(X1 == 2)) { 'hello' }
if (df %>% filter(X1 == 2) %>% nrow() > 0) { 'hello' }
if (df %>% filter(X1 == 3) %>% nrow() > 0) { 'hello' }
c <- c('a', 'b')
for (a in seq_along(c)) { a }
ca <- c('a', 'b')
for (a in seq_along(ca)) { a }
for (a in seq_along(ca)) { ca[a] }
for (a in seq_along(colnames(education_tax_income))) { a }
for (a in seq_along(colnames(education_tax_income))) { education_tax_income[a]}
for (i in seq_along(colnames(education_tax_income))) { a }
for (i in seq_along(colnames(education_tax_income))) { i }
for (i in seq_along(1:4) { i }
for (i in seq_along(1:4)) { i }
vec <- 1:5
for (i in seq_along(vec)) print(i)
for (i in seq_along(vec)) {print(i)
for (i in seq_along(vec)) {
print(i)
}
?.zx,
for (i in seq_along(vec)) {}
for (i in seq_along(vec)) {
print(i)
}
for (i in seq_along(1:5)) {
print(i)
}
#!/usr/bin/env Rscript
library("ggplot2")
library("stringr")
library("gclus")
education_df_plus_3 <- readRDS('./r-objects/education_df_plus_3.rds')
education_irs_zip <- readRDS('./r-objects/zip_irs_education_df.rds')[, c("county", "income_per_tax_return")]
education_cols <- c(
"county", "Pct_Black", "Pct_Hispanic", "Pct_Native_American",
"Pct_EL", "Pct_SWD", "Pct_ED", "ACT_Composite",
"Pct_Expelled", "Graduation",
"mean_math", "mean_science", "mean_literature"
)
education <- education_df_plus_3[education_cols]
education_tax_income <- merge(education_irs_zip, education, by = 'county')
for (i in seq_along(colnames(education_tax_income))) {
print(i)
}
?rbind
cor(ca[['x']], ca[['y']])
cor(df[['X1']], df[['X2']])
find_cor <- function(df, col_name) {
df_cors <- data.frame(matrix(nrow = 0, ncol = 2))
names(df_cors) <- c('x', 'y')
for (i in seq_along(colnames(df))) {
col <- colnames(df)[i]
if (col == col_name) next
col_corr <- cor(df[[col]], df[[col_name]])
if (col_corr > .2) {
cpairs(
df[, c(col, col_name)],
gap=.5,
upper.panel=panel.smooth,
main = paste(col, "/", col_name, "/ Corr: ", col_corr)
)
}
}
}
find_cor(education_tax_income, "Pct_Black")
find_cor(education_tax_income, "Pct_Black")
debugSource('~/workspace/nss/datascience/trimester/second/groups/savage-squadron/data-question-4-data-question-4-savage-squadron/scripts/explore/education-demo-by-subject-tp.R', echo=TRUE)
names
find_cor <- function(df, col_name) {
for (i in seq_along(colnames(df))) {
col <- colnames(df)[i]
if (col == col_name) next
col_corr <- cor(df[[col]], df[[col_name]])
if (col_corr > .2) {
cpairs(
df[, c(col, col_name)],
gap=.5,
upper.panel=panel.smooth,
main = paste(col, "/", col_name, "/ Corr: ", col_corr)
)
}
}
}
find_cor(education_tax_income, "Pct_Black")
find_cor(education_tax_income, "Pct_Black")
debugSource('~/workspace/nss/datascience/trimester/second/groups/savage-squadron/data-question-4-data-question-4-savage-squadron/scripts/explore/education-demo-by-subject-tp.R', echo=TRUE)
find_cor <- function(df, col_name) {
for (i in seq_along(colnames(df))) {
col <- colnames(df)[i]
if (col == col_name) next
col_corr <- cor(df[col], df[col_name])
if (col_corr > .2) {
cpairs(
df[, c(col, col_name)],
gap=.5,
upper.panel=panel.smooth,
main = paste(col, "/", col_name, "/ Corr: ", col_corr)
)
}
}
}
find_cor(education_tax_income, "Pct_Black")
debugSource('~/workspace/nss/datascience/trimester/second/groups/savage-squadron/data-question-4-data-question-4-savage-squadron/scripts/explore/education-demo-by-subject-tp.R', echo=TRUE)
find_cor <- function(df, col_name) {
for (i in seq_along(colnames(df))) {
col <- colnames(df)[i]
if (col == col_name) next
col_corr <- cor(df[col], df[col_name])
if (col_corr > .2) {
cpairs(
df[, c(col, col_name)],
gap=.5,
upper.panel=panel.smooth,
main = paste(col, "/", col_name, "/ Corr: ", col_corr)
)
}
}
}
find_cor <- function(df, col_name) {
for (i in seq_along(colnames(df))) {
col <- colnames(df)[i]
if (col == col_name) next
col_corr <- cor(df[col], df[col_name])
if (col_corr > .2) {
cpairs(
df[, c(col, col_name)],
gap=.5,
upper.panel=panel.smooth,
main = paste(col, "/", col_name, "/ Corr: ", col_corr)
)
}
}
}
find_cor(df = education_tax_income, col_name = "Pct_Black")
