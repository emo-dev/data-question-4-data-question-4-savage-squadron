education_county_only$county <- tolower(education_county_only$county)
# From --> gibson county special school district
education_county_only[26, 'county'] <- 'gibson county'
# From Jackson-Madison County
education_county_only[56, 'county'] <- 'madison county'
assign_mean_to_zeros_na <- function(df, colName) {
df[colName][(is.na(df[colName])) | df[colName] == 0] <- mean(df[colName][!0], na.rm = TRUE)
df
}
# Assign mean of AlgI and AlgII col to NA vals, respectively
for (colName in seq_along(c('AlgI', 'AlgII', 'BioI', 'Chemistry', 'ELA', 'EngI', 'EngII', 'EngIII', 'Math', 'Science'))) {
education_county_only <- assign_mean_to_zeros_na(df = education_county_only, colName = colName)
}
# education_county_only$AlgI[(is.na(education_county_only$AlgI)) | education_county_only$AlgI == 0] <- mean(education_county_only$AlgI[!0], na.rm = TRUE)
# education_county_only$AlgII[(is.na(education_county_only$AlgII)) | education_county_only$AlgII == 0] <- mean(education_county_only$AlgII[!0], na.rm = TRUE)
View(education_county_only)
for (colName in seq_along(c('AlgI', 'AlgII', 'BioI', 'Chemistry', 'ELA', 'EngI', 'EngII', 'EngIII', 'Math', 'Science'))) {
print(colName)
education_county_only <- assign_mean_to_zeros_na(df = education_county_only, colName = colName)
}
for (ind in seq_along(c('AlgI', 'AlgII', 'BioI', 'Chemistry', 'ELA', 'EngI', 'EngII', 'EngIII', 'Math', 'Science'))) {
print(colName[seq_along])
education_county_only <- assign_mean_to_zeros_na(df = education_county_only, colName = colName)
}
cols_to_convert <- c('AlgI', 'AlgII', 'BioI', 'Chemistry', 'ELA', 'EngI', 'EngII', 'EngIII', 'Math', 'Science')
for (ind in seq_along(cols_to_convert)) {
print(cols_to_convert[seq_along])
education_county_only <- assign_mean_to_zeros_na(df = education_county_only, colName = cols_to_convert[ind])
}
cols_to_convert <- c('AlgI', 'AlgII', 'BioI', 'Chemistry', 'ELA', 'EngI', 'EngII', 'EngIII', 'Math', 'Science')
for (i in seq_along(cols_to_convert)) {
print(cols_to_convert[i])
education_county_only <- assign_mean_to_zeros_na(education_county_only,  cols_to_convert[i])
}
assign_mean_to_zeros_na <- function(df, colName) {
df[colName][(is.na(df[colName])) | df[colName] == 0] <- mean(df[[colName]][!0], na.rm = TRUE)
df
}
cols_to_convert <- c('AlgI', 'AlgII', 'BioI', 'Chemistry', 'ELA', 'EngI', 'EngII', 'EngIII', 'Math', 'Science')
for (i in seq_along(cols_to_convert)) {
print(cols_to_convert[i])
education_county_only <- assign_mean_to_zeros_na(education_county_only,  cols_to_convert[i])
}
View(education_county_only)
library("readr")
library("dplyr")
library("tidyr")
education_df <- read_csv('./data/achievement_profile_data_with_CORE.csv')
# More detailed stats on districts
# membership_data <- read_csv('./data/data_2015_membership_school.csv')
education_county_only <- dplyr::filter(education_df, grepl('(C|c)ounty', system_name))
education_county_only <- education_county_only %>%
rename(county = system_name)
education_county_only$county <- tolower(education_county_only$county)
# From --> gibson county special school district
education_county_only[26, 'county'] <- 'gibson county'
# From Jackson-Madison County
education_county_only[56, 'county'] <- 'madison county'
assign_mean_to_zeros_na <- function(df, colName) {
df[colName][(is.na(df[colName])) | df[colName] == 0] <- mean(df[[colName]][!0], na.rm = TRUE)
}
# Assign mean of AlgI and AlgII col to NA vals, respectively
cols_to_convert <- c('AlgI', 'AlgII', 'BioI', 'Chemistry', 'ELA', 'EngI', 'EngII', 'EngIII', 'Math', 'Science')
for (i in seq_along(cols_to_convert)) {
print(cols_to_convert[i])
education_county_only <- assign_mean_to_zeros_na(education_county_only,  cols_to_convert[i])
}
# education_county_only$AlgI[(is.na(education_county_only$AlgI)) | education_county_only$AlgI == 0] <- mean(education_county_only$AlgI[!0], na.rm = TRUE)
# education_county_only$AlgII[(is.na(education_county_only$AlgII)) | education_county_only$AlgII == 0] <- mean(education_county_only$AlgII[!0], na.rm = TRUE)
View(education_county_only)
library("readr")
library("dplyr")
library("tidyr")
education_df <- read_csv('./data/achievement_profile_data_with_CORE.csv')
# More detailed stats on districts
# membership_data <- read_csv('./data/data_2015_membership_school.csv')
education_county_only <- dplyr::filter(education_df, grepl('(C|c)ounty', system_name))
education_county_only <- education_county_only %>%
rename(county = system_name)
education_county_only$county <- tolower(education_county_only$county)
# From --> gibson county special school district
education_county_only[26, 'county'] <- 'gibson county'
# From Jackson-Madison County
education_county_only[56, 'county'] <- 'madison county'
assign_mean_to_zeros_na <- function(df, colName) {
df[colName][(is.na(df[colName])) | df[colName] == 0] <- mean(df[[colName]][!0], na.rm = TRUE)
df
}
# Assign mean of AlgI and AlgII col to NA vals, respectively
cols_to_convert <- c('AlgI', 'AlgII', 'BioI', 'Chemistry', 'ELA', 'EngI', 'EngII', 'EngIII', 'Math', 'Science')
for (i in seq_along(cols_to_convert)) {
print(cols_to_convert[i])
education_county_only <- assign_mean_to_zeros_na(education_county_only,  cols_to_convert[i])
}
# education_county_only$AlgI[(is.na(education_county_only$AlgI)) | education_county_only$AlgI == 0] <- mean(education_county_only$AlgI[!0], na.rm = TRUE)
# education_county_only$AlgII[(is.na(education_county_only$AlgII)) | education_county_only$AlgII == 0] <- mean(education_county_only$AlgII[!0], na.rm = TRUE)
View(education_county_only)
final_education_df <- education_county_only %>%
rowwise() %>%
mutate(
mean_math = mean(AlgI, AlgII, Math),
mean_science = mean(BioI, Chemistry, Science),
mean_literature = mean(ELA, EngI, EngII, EngIII)
) %>%
View()
View()
final_education_df <- education_county_only %>%
rowwise() %>%
mutate(
mean_math = mean(AlgI, AlgII, Math),
mean_science = mean(BioI, Chemistry, Science),
mean_literature = mean(ELA, EngI, EngII, EngIII)
) %>%
arrange(desc( mean_math )) %>%
View()
final_education_df <- education_county_only %>%
rowwise() %>%
mutate(
mean_math = mean(AlgI, AlgII, Math),
mean_science = mean(BioI, Chemistry, Science),
mean_literature = mean(ELA, EngI, EngII, EngIII)
) %>%
arrange(desc( mean(mean_math, mean_science) )) %>%
View()
final_education_df <- education_county_only %>%
rowwise() %>%
mutate(
mean_math = mean(AlgI, AlgII, Math),
mean_science = mean(BioI, Chemistry, Science),
mean_literature = mean(ELA, EngI, EngII, EngIII)
) %>%
arrange(desc( mean_math, mean_science, mean_literature )) %>%
View()
library("readr")
library("dplyr")
library("tidyr")
education_df <- read_csv('./data/achievement_profile_data_with_CORE.csv')
# More detailed stats on districts
# membership_data <- read_csv('./data/data_2015_membership_school.csv')
education_county_only <- dplyr::filter(education_df, grepl('(C|c)ounty', system_name))
education_county_only <- education_county_only %>%
rename(county = system_name)
education_county_only$county <- tolower(education_county_only$county)
# From --> gibson county special school district
education_county_only[26, 'county'] <- 'gibson county'
# From Jackson-Madison County
education_county_only[56, 'county'] <- 'madison county'
assign_mean_to_zeros_na <- function(df, colName) {
df[colName][(is.na(df[colName])) | df[colName] == 0] <- mean(df[[colName]][!0], na.rm = TRUE)
df
}
# Assign mean of AlgI and AlgII col to NA vals, respectively. We did want to include these additional columns in case the data ever changed.
# The also considers 0's and diregards them before calculating mean, and replaces them with the mean.
cols_to_convert <- c('AlgI', 'AlgII', 'BioI', 'Chemistry', 'ELA', 'EngI', 'EngII', 'EngIII', 'Math', 'Science')
for (i in seq_along(cols_to_convert)) {
education_county_only <- assign_mean_to_zeros_na(education_county_only,  cols_to_convert[i])
}
# Create an overall education dataset, creating 3 additional cols calculating the mean of
# the top 3 subjects: Math, Science, and Literature/English
education_df_plus_3 <- education_county_only %>%
rowwise() %>%
mutate(
mean_math = mean(AlgI, AlgII, Math),
mean_science = mean(BioI, Chemistry, Science),
mean_literature = mean(ELA, EngI, EngII, EngIII)
)
# Save off df for use later on
saveRDS(education_df_plus_3, './r-objects/education_df_plus_3.rds')
write.csv(education_df_plus_3, './r-objects/education_df_plus_3.csv')
strsplit("dickson county", " ")
strsplit("dickson county", " ")[0]
strsplit("dickson county", " ")[1]
strsplit("dickson county", " ")[[1]]
strsplit("dickson county", " ")[[1]][[1]]
strsplit(c("dickson county", "carroll county"), " ")[, 1]
strsplit(c("dickson county", "carroll county"), " ")[[, 1]]
strsplit(c("dickson county", "carroll county"), " ")[[1]]
first.word("dickson county", 1)
first("dickson county")
library( ‘stringr’)
library(‘stringr’)
library("stringr")
first.word("dickson county", 1)
word(education_df_plus_3$county, 1)
library("readr")
library("dplyr")
library("tidyr")
education_df <- read_csv('./data/achievement_profile_data_with_CORE.csv')
# More detailed stats on districts
# membership_data <- read_csv('./data/data_2015_membership_school.csv')
education_county_only <- dplyr::filter(education_df, grepl('(C|c)ounty', system_name))
education_county_only <- education_county_only %>%
rename(county = system_name)
education_county_only$county <- tolower(education_county_only$county)
# From --> gibson county special school district
education_county_only[26, 'county'] <- 'gibson county'
# From Jackson-Madison County
education_county_only[56, 'county'] <- 'madison county'
assign_mean_to_zeros_na <- function(df, colName) {
df[colName][(is.na(df[colName])) | df[colName] == 0] <- mean(df[[colName]][!0], na.rm = TRUE)
df
}
# Assign mean of AlgI and AlgII col to NA vals, respectively. We did want to include these additional columns in case the data ever changed.
# The also considers 0's and diregards them before calculating mean, and replaces them with the mean.
cols_to_convert <- c('AlgI', 'AlgII', 'BioI', 'Chemistry', 'ELA', 'EngI', 'EngII', 'EngIII', 'Math', 'Science')
for (i in seq_along(cols_to_convert)) {
education_county_only <- assign_mean_to_zeros_na(education_county_only,  cols_to_convert[i])
}
# Create an overall education dataset, creating 3 additional cols calculating the mean of
# the top 3 subjects: Math, Science, and Literature/English
education_df_plus_3 <- education_county_only %>%
rowwise() %>%
mutate(
mean_math = mean(AlgI, AlgII, Math),
mean_science = mean(BioI, Chemistry, Science),
mean_literature = mean(ELA, EngI, EngII, EngIII)
)
word(education_df_plus_3$county, 1)
library("readr")
library("dplyr")
library("tidyr")
library("stringr")
education_df <- read_csv('./data/achievement_profile_data_with_CORE.csv')
# More detailed stats on districts
# membership_data <- read_csv('./data/data_2015_membership_school.csv')
education_county_only <- dplyr::filter(education_df, grepl('(C|c)ounty', system_name))
education_county_only <- education_county_only %>%
rename(county = system_name)
education_county_only$county <- word(tolower(education_county_only$county), 1)
View(education_county_only)
library("readr")
library("dplyr")
library("tidyr")
library("stringr")
education_df <- read_csv('./data/achievement_profile_data_with_CORE.csv')
# More detailed stats on districts
# membership_data <- read_csv('./data/data_2015_membership_school.csv')
education_county_only <- dplyr::filter(education_df, grepl('(C|c)ounty', system_name))
education_county_only <- education_county_only %>%
rename(county = system_name)
# From --> gibson county special school district
education_county_only[26, 'county'] <- 'gibson county'
# From Jackson-Madison County
education_county_only[56, 'county'] <- 'madison county'
education_county_only$county <- word(tolower(education_county_only$county), 1)
assign_mean_to_zeros_na <- function(df, colName) {
df[colName][(is.na(df[colName])) | df[colName] == 0] <- mean(df[[colName]][!0], na.rm = TRUE)
df
}
# Assign mean of AlgI and AlgII col to NA vals, respectively. We did want to include these additional columns in case the data ever changed.
# The also considers 0's and diregards them before calculating mean, and replaces them with the mean.
cols_to_convert <- c('AlgI', 'AlgII', 'BioI', 'Chemistry', 'ELA', 'EngI', 'EngII', 'EngIII', 'Math', 'Science')
for (i in seq_along(cols_to_convert)) {
education_county_only <- assign_mean_to_zeros_na(education_county_only,  cols_to_convert[i])
}
# Create an overall education dataset, creating 3 additional cols calculating the mean of
# the top 3 subjects: Math, Science, and Literature/English
education_df_plus_3 <- education_county_only %>%
rowwise() %>%
mutate(
mean_math = mean(AlgI, AlgII, Math),
mean_science = mean(BioI, Chemistry, Science),
mean_literature = mean(ELA, EngI, EngII, EngIII)
)
# Save off df for use later on
saveRDS(education_df_plus_3, './r-objects/education_df_plus_3.rds')
write.csv(education_df_plus_3, './r-objects/education_df_plus_3.csv')
View(education_df_plus_3)
library("readxl")
library("dplyr")
library("stringr")
zip_codes_dataset <- read_excel('./data/zip_code_database.xlsx')
attach(zip_codes_dataset)
# We only want TN data
zip_codes_dataset_tn <- filter(zip_codes_dataset, (!is.na(county) & state == "TN"))
zip_codes_dataset_tn <- zip_codes_dataset_tn[ -c(2, 3, 5, 6, 7, 9, 11, 12) ]
# Lowercase and grab the first word from the county column
zip_codes_dataset_tn$county <- word(tolower(zip_codes_dataset_tn$county), 1)
# Adding in a new row, total_population, which symbolizes a group by county, and sum of the
# irs_estimated_population_2014
zip_codes_group_by_county <- zip_codes_dataset_tn %>%
group_by(county) %>%
mutate(total_population = sum(irs_estimated_population_2014)) %>%
ungroup() %>%
arrange(desc(total_population))
# Save off all rows from zip codes df with total pop column
saveRDS(zip_codes_group_by_county, './r-objects/zip_codes_group_by_county.rds')
write.csv(zip_codes_group_by_county, './r-objects/zip_codes_group_by_county.csv')
# Create a summary per county of the total population
zip_code_total_population <- zip_codes_dataset_tn %>%
group_by(county) %>%
summarize(total_population = sum(irs_estimated_population_2014)) %>%
ungroup() %>%
arrange(desc(total_population)) %>%
View()
# Save off the summarized total pop per county
saveRDS(zip_code_total_population, './r-objects/zip_code_total_population.rds')
write.csv(zip_code_total_population, './r-objects/zip_code_total_population.csv')
library("readxl")
library("dplyr")
# Read in zip codes and irs dataframes created at both
# './scripts/irs.R'
# './scripts/zip-codes.R
zip_codes_df <- readRDS('./r-objects/zip_codes_group_by_county.rds')
irs_df <- readRDS('./r-objects/irs_2014_dataset_initial_ds.rds')
# Merge both irs and zip codes data by zip
zip_codes_irs_df <- merge(zip_codes_df, irs_df, by = 'zip')
# we want each row to represent the county. With that being said, we want to grab the sum and mean
# of the columns specified.
# We also created the income_per_tax_return column which takes the total income tax amount
# divided by total income returns to produce this field, by county.
zip_codes_irs_df_by_county <- zip_codes_irs_df %>%
group_by( county ) %>%
summarise(
sum_total_population = sum(total_population),
sum_num_dependents = sum(num_dependents),
sum_adj_gross_income = sum(adj_gross_income),
mean_adj_gross_income = mean(adj_gross_income),
sum_total_income_returns = sum(total_income_returns),
sum_total_income_amount = sum(total_income_amount),
mean_total_income_amount = mean(total_income_amount),
sum_taxes_paid_returns = sum(taxes_paid_returns),
sum_taxes_paid_amount = sum(taxes_paid_amount)
) %>%
ungroup() %>%
mutate( income_per_tax_return = (sum_total_income_amount / sum_total_income_returns) * 1000 ) %>%
select(
county, sum_total_population, sum_total_income_returns, sum_total_income_amount,
income_per_tax_return,sum_num_dependents, sum_adj_gross_income, mean_adj_gross_income,
mean_total_income_amount, sum_taxes_paid_returns, sum_taxes_paid_amount
) %>%
arrange( desc( county ) )
# Save off df for use later on
saveRDS(zip_codes_irs_df_by_county, './r-objects/zip_codes_irs_df_by_county.rds')
write.csv(zip_codes_irs_df_by_county, './r-objects/zip_codes_irs_df_by_county.csv')
colnames(education_df_plus_3)
library("readr")
library("dplyr")
library("tidyr")
library("stringr")
education_df <- read_csv('./data/achievement_profile_data_with_CORE.csv')
# More detailed stats on districts
# membership_data <- read_csv('./data/data_2015_membership_school.csv')
education_county_only <- dplyr::filter(education_df, grepl('(C|c)ounty', system_name))
education_county_only <- education_county_only %>%
rename(county = system_name)
# From --> gibson county special school district
education_county_only[26, 'county'] <- 'gibson county'
# From Jackson-Madison County
education_county_only[56, 'county'] <- 'madison county'
education_county_only$county <- word(tolower(education_county_only$county), 1)
assign_mean_to_zeros_na <- function(df, colName) {
df[colName][(is.na(df[colName])) | df[colName] == 0] <- mean(df[[colName]][!0], na.rm = TRUE)
df
}
# Assign mean of AlgI and AlgII col to NA vals, respectively. We did want to include these additional columns in case the data ever changed.
# The also considers 0's and diregards them before calculating mean, and replaces them with the mean.
cols_to_convert <- c('AlgI', 'AlgII', 'BioI', 'Chemistry', 'ELA', 'EngI', 'EngII', 'EngIII', 'Math', 'Science')
for (i in seq_along(cols_to_convert)) {
education_county_only <- assign_mean_to_zeros_na(education_county_only,  cols_to_convert[i])
}
# Create an overall education dataset, creating 3 additional cols calculating the mean of
# the top 3 subjects: Math, Science, and Literature/English
education_df_plus_3 <- education_county_only %>%
rowwise() %>%
mutate(
mean_math = mean(AlgI, AlgII, Math),
mean_science = mean(BioI, Chemistry, Science),
mean_literature = mean(ELA, EngI, EngII, EngIII)
)
# Save off df for use later on
saveRDS(education_df_plus_3, './r-objects/education_df_plus_3.rds')
write.csv(education_df_plus_3, './r-objects/education_df_plus_3.csv')
colnames(education_df_plus_3)
education_merge_irs_zip_subset <- education_df_plus_3[2, 22:31]
View(education_merge_irs_zip_subset)
education_merge_irs_zip_subset <- education_df_plus_3[, c(2, 22:31)]
View(education_merge_irs_zip_subset)
unique(education_merge_irs_zip_subset$CORE_region)
library("readr")
library("dplyr")
library("tidyr")
library("stringr")
education_df <- read_csv('./data/achievement_profile_data_with_CORE.csv')
# More detailed stats on districts
# membership_data <- read_csv('./data/data_2015_membership_school.csv')
education_county_only <- dplyr::filter(education_df, grepl('(C|c)ounty', system_name))
education_county_only <- education_county_only %>%
rename(county = system_name)
# From --> gibson county special school district
education_county_only[26, 'county'] <- 'gibson county'
# From Jackson-Madison County
education_county_only[56, 'county'] <- 'madison county'
education_county_only$county <- word(tolower(education_county_only$county), 1)
assign_mean_to_zeros_na <- function(df, colName) {
df[colName][(is.na(df[colName])) | df[colName] == 0] <- mean(df[[colName]][!0], na.rm = TRUE)
df
}
# Assign mean of AlgI and AlgII col to NA vals, respectively. We did want to include these additional columns in case the data ever changed.
# The also considers 0's and diregards them before calculating mean, and replaces them with the mean.
cols_to_convert <- c('AlgI', 'AlgII', 'BioI', 'Chemistry', 'ELA', 'EngI', 'EngII', 'EngIII', 'Math', 'Science')
for (i in seq_along(cols_to_convert)) {
education_county_only <- assign_mean_to_zeros_na(education_county_only,  cols_to_convert[i])
}
# Create an overall education dataset, creating 3 additional cols calculating the mean of
# the top 3 subjects: Math, Science, and Literature/English
education_df_plus_3 <- education_county_only %>%
rowwise() %>%
mutate(
mean_math = mean(AlgI, AlgII, Math),
mean_science = mean(BioI, Chemistry, Science),
mean_literature = mean(ELA, EngI, EngII, EngIII)
)
# Save off df for use later on
saveRDS(education_df_plus_3, './r-objects/education_df_plus_3.rds')
write.csv(education_df_plus_3, './r-objects/education_df_plus_3.csv')
# Create a subset of the education_df_plus_3 to merge in with the irs/zipcode datasets.
education_merge_irs_zip_subset <- education_df_plus_3[, c(2, 22:31)]
# Save off df for use later on
saveRDS(education_merge_irs_zip_subset, './r-objects/education_merge_irs_zip_subset.rds')
write.csv(education_merge_irs_zip_subset, './r-objects/education_merge_irs_zip_subset.csv')
library("readxl")
library("dplyr")
# Read in education data and irs/zip codes data
# './scripts/education.R'
# './scripts/merge-zip-codes-irs-2014.R'
education <- readRDS('./r-objects/education_merge_irs_zip_subset.rds')
zip_codes_irs_df_by_county <- readRDS('./r-objects/zip_codes_irs_df_by_county.rds')
# Merge both irs and zip codes data by zip
zip_irs_education_df <- merge(education, zip_codes_irs_df_by_county, by = 'county')
View(zip_irs_education_df)
colnames(zip_irs_education_df)
library("readxl")
library("dplyr")
# Read in zip codes and irs dataframes created at both
# './scripts/irs.R'
# './scripts/zip-codes.R
zip_codes_df <- readRDS('./r-objects/zip_codes_group_by_county.rds')
irs_df <- readRDS('./r-objects/irs_2014_dataset_initial_ds.rds')
# Merge both irs and zip codes data by zip
zip_codes_irs_df <- merge(zip_codes_df, irs_df, by = 'zip')
# we want each row to represent the county. With that being said, we want to grab the sum and mean
# of the columns specified.
# We also created the income_per_tax_return column which takes the total income tax amount
# divided by total income returns to produce this field, by county.
zip_codes_irs_df_by_county <- zip_codes_irs_df %>%
group_by( county ) %>%
summarise(
sum_total_population = sum(total_population),
sum_num_dependents = sum(num_dependents),
sum_adj_gross_income = sum(adj_gross_income),
mean_adj_gross_income = mean(adj_gross_income),
sum_total_income_returns = sum(total_income_returns),
sum_total_income_amount = sum(total_income_amount),
mean_total_income_amount = mean(total_income_amount),
sum_taxes_paid_returns = sum(taxes_paid_returns),
sum_taxes_paid_amount = sum(taxes_paid_amount)
) %>%
ungroup() %>%
mutate(
income_per_tax_return = sum_total_income_amount / sum_total_income_returns
) %>%
select(
county, sum_total_population, sum_total_income_returns, sum_total_income_amount,
income_per_tax_return,sum_num_dependents, sum_adj_gross_income, mean_adj_gross_income,
mean_total_income_amount, sum_taxes_paid_returns, sum_taxes_paid_amount
) %>%
arrange( desc( county ) )
# Save off df for use later on
saveRDS(zip_codes_irs_df_by_county, './r-objects/zip_codes_irs_df_by_county.rds')
write.csv(zip_codes_irs_df_by_county, './r-objects/zip_codes_irs_df_by_county.csv')
library("readxl")
library("dplyr")
# Read in education data and irs/zip codes data
# './scripts/education.R'
# './scripts/merge-zip-codes-irs-2014.R'
education <- readRDS('./r-objects/education_merge_irs_zip_subset.rds')
zip_codes_irs_df_by_county <- readRDS('./r-objects/zip_codes_irs_df_by_county.rds')
# Merge both irs and zip codes data by zip
zip_irs_education_df <- merge(education, zip_codes_irs_df_by_county, by = 'county')
View(zip_irs_education_df)
packages <- c(
"readxl",
"readr",
"dplyr",
"tidyr",
"stringr"
)
install.packages(packages)
install.packages(packages)
packrat::init()
install.packages("packrat")
packrat::init()
install.packages(packages)
packrat::snapshot()
for (p in c(1, 2, 3)) { print(p) }
packages <- c(
"readxl",
"readr",
"dplyr",
"tidyr",
"stringr"
)
install.packages("packrat")
packrat::init()
for (p in packages) {
if(p %in% rownames(installed.packages()) == FALSE) {
install.packages(p)
}
}
ls
ls()
